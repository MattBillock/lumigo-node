version: 2.1
defaults: &defaults
  working_directory: ~/lumigo-node
  docker:
    - image: lumigo/ci:latest
      auth:
        username: lumigo
        password: $DOCKERHUB_PASSWORD
  environment:
    TZ: "Asia/Jerusalem"

commands:
  checkout_utils:
    description: "Checkout various utilities"
    steps:
      - run:
          command: |
            mkdir ~/.ssh/ && echo -e "Host github.com\n\tStrictHostKeyChecking no\n" > ~/.ssh/config
            cd ..
            git clone git@github.com:lumigo-io/common-resources.git
      - run:
          command: |
            cd ..
            git clone git@github.com:lumigo-io/utils.git
  checkout_credentials:
    description: "Checkout credentials"
    steps:
      - run:
          command: |
            cd ..
            git clone git@github.com:lumigo-io/common-resources.git

workflows:
  test-deploy:
    jobs:
    - test:
        filters:
          branches:
            ignore: master
    - integration-test:
        filters:
          branches:
            ignore: master
        requires:
          - test
    - deploy:
        filters:
          branches:
            only: master
jobs:
  test:
    <<: *defaults
    steps:
      - checkout # special step to check out source code to working directory
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: install-npm-wee
          command: npm install
      - save_cache:
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - ./node_modules
      - run:
          name: test
          command: npm test
      - run:
          name: eslint
          command: npm run lint
      - run:
          name: code-coverage
          command: npm test --coverage && codecov
      - store_artifacts:
          path: coverage
          prefix: coverage
  integration-test:
    <<: *defaults
    steps:
      - checkout_utils
      - checkout
      - run:
          name: deploy env
          command: ./scripts/ci_deploy.sh
      - run:
          name: npm i
          command: cd ../integration-tests && npm i
      - run:
          name: recursive-install
          command: sudo npm install -g recursive-install
      - run:
          name: prepare_env
          command: cd ../integration-tests && ./scripts/prepare_env.sh
      - run:
          name: deploy integ-test
          command: cd ../integration-tests && ./scripts/deploy.sh --spec node
      - run:
          name: run tests
          command: cd ../integration-tests && export testNode=true && npm run test
  deploy:
    <<: *defaults
    steps:
      - checkout_utils
      - checkout
      - checkout_credentials
      - run: echo "export AWS_DEFAULT_REGION=us-west-2" >> $BASH_ENV
      - run: mkdir -p ~/.aws
      - run: echo ${KEY} | gpg --batch -d --passphrase-fd 0 ../common-resources/encrypted_files/credentials_integration.enc > ~/.aws/credentials
      - run:
            # Avoid annoying double runs after deploy.
            # See https://discuss.circleci.com/t/job-runs-even-when-tags-ignore-filter-is-triggered-when-combined-with-branches-only/20664
            name: Check if tagged
            command: |
              tags=$(git tag -l --points-at HEAD)
              echo "Tags $tags"
              if [[ ! -z "$tags" ]]
              then
                echo "A tagged commit, skip..."
                circleci step halt
              fi
      - run:
          name: deploy to npm + lambda layer
          command: ./scripts/bd_to_prod.sh
